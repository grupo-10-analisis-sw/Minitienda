/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * Main. java
 *
 * Created on 05-jun-2009, 20:47:43
 */
package botiga;

import Utils.Utils;
import com.sun.glass.events.KeyEvent;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.security.NoSuchProviderException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Main extends javax.swing.JFrame {

    private Clientes[] arrayClientes;
    private Productos[] arrayProductos;
    private boolean[] editabeClientes = {false, false, false, true};
    private boolean isAdmin = false;
    int userActual = 0, compraTotal = 0;
    int[] prodComprados = null;
    private int[] arrayTotal;

    /**
     * Creates new form Main
     */
    public Main() throws IOException {
        arrayClientes = new Clientes[50];
        arrayProductos = new Productos[100];
        initComponents();
        this.setSize(260, 150);
        canviarTitol("Login");
        centrarFinestra(this);
        this.setResizable(false);
        jpnAdmin.setVisible(false);
        jpnUser.setVisible(false);
        File fitxer = new File("src\\ficheros\\clientes.dat");
        File fitxer2 = new File("src\\ficheros\\productos.dat");

        if (fitxer.isFile() == false) {
            fitxer.createNewFile();
        }
        if (fitxer2.isFile() == false) {
            fitxer2.createNewFile();
        }

        Clientes aux = new Clientes();
        arrayClientes = aux.cargarClientes(fitxer);

        Productos aux2 = new Productos();
        arrayProductos = aux2.cargarProductos(fitxer2);
    }

    private void canviarTitol(String titol) {
        this.setTitle(titol);
    }

    private void centrarFinestra(Main aThis) {
        //Tomo el tamaño de la pantalla
        Dimension pantallaTamano = Toolkit.getDefaultToolkit().getScreenSize();
        //El ancho de la pantalla lo divido en 2 y le resto la mitad del ancho de mi ventana, con eso queda centrada en el eje X, para el eje Y es lo mismo pero con el alto:
        aThis.setLocation((pantallaTamano.width / 2) - (aThis.getWidth() / 2), (pantallaTamano.height / 2) - (aThis.getHeight() / 2));
    }

    private void centrarRegistre(JDialog aThis) {
        //Tomo el tamaño de la pantalla
        Dimension pantallaTamano = Toolkit.getDefaultToolkit().getScreenSize();
        //El ancho de la pantalla lo divido en 2 y le resto la mitad del ancho de mi ventana, con eso queda centrada en el eje X, para el eje Y es lo mismo pero con el alto:
        aThis.setLocation((pantallaTamano.width / 2) - (aThis.getWidth() / 2), (pantallaTamano.height / 2) - (aThis.getHeight() / 2));
    }

    private void clienteNuevo() {
        jdRegistro.setVisible(true);
        jdRegistro.setSize(650, 400);
        centrarRegistre(jdRegistro);
        jdRegistro.setTitle("Registro de nuevo cliente");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdRegistro = new javax.swing.JDialog();
        jtNombre = new javax.swing.JTextField();
        jtApellidos = new javax.swing.JTextField();
        registroNombreLabel = new javax.swing.JLabel();
        registroPassLabel = new javax.swing.JLabel();
        registroUserLabel = new javax.swing.JLabel();
        infoAyudaRegistroLabel = new javax.swing.JLabel();
        darAltaUsuarioBtn = new javax.swing.JButton();
        cancelarAltaBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        confirmarPassLabel = new javax.swing.JLabel();
        apellidosLabel = new javax.swing.JLabel();
        userRegistroTextField = new javax.swing.JTextField();
        passwordRegistroTextField = new javax.swing.JPasswordField();
        confirmPassRegistroTextField = new javax.swing.JPasswordField();
        correoLabel = new javax.swing.JLabel();
        correoRegistroTextField = new javax.swing.JTextField();
        jdAgregarProductos = new javax.swing.JDialog();
        jtnombre = new javax.swing.JTextField();
        jtprecio = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtdescripcion = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        cancelarAltaProductoBtn = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jpnAdmin = new javax.swing.JPanel();
        jtabPrincipal = new javax.swing.JTabbedPane();
        clientesScrollPane = new javax.swing.JScrollPane();
        clientesPanel = new javax.swing.JPanel();
        tituloPestañaClientesLabel = new javax.swing.JLabel();
        tablaClientesScrollPane = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();
        btnInsertarCliente = new javax.swing.JButton();
        btnEliminarCliente = new javax.swing.JButton();
        btnSalirClientes = new javax.swing.JButton();
        infoClientes2Label = new javax.swing.JLabel();
        infoClientes1Label = new javax.swing.JLabel();
        productosScrollPane = new javax.swing.JScrollPane();
        productosPanel = new javax.swing.JPanel();
        tituloPestañaProductosLabel = new javax.swing.JLabel();
        tablaProdScrollPane = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        infoProd1Label = new javax.swing.JLabel();
        infoProd2Label = new javax.swing.JLabel();
        btnInsertarProd = new javax.swing.JButton();
        btnEliminarProd = new javax.swing.JButton();
        btnSalirProd = new javax.swing.JButton();
        aboutScrollPane = new javax.swing.JScrollPane();
        aboutPanel = new javax.swing.JPanel();
        imagenAboutLabel = new javax.swing.JLabel();
        tituloPestañaAboutLabel = new javax.swing.JLabel();
        texto1ScrollPane = new javax.swing.JScrollPane();
        textArea1 = new javax.swing.JTextArea();
        mailsScrollPane = new javax.swing.JScrollPane();
        mailsEditorPane = new javax.swing.JEditorPane();
        jpnUser = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableClientes = new javax.swing.JTable();
        jlbClientes = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jlbNumProd = new javax.swing.JLabel();
        btnComprar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jpnLogin = new javax.swing.JPanel();
        registrarseLabelBtn = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtUser = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        jbnAceptar = new javax.swing.JButton();

        registroNombreLabel.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        registroNombreLabel.setText("Nombre:");
        registroNombreLabel.setFocusable(false);

        registroPassLabel.setText("Contraseña:");

        registroUserLabel.setText("User:");

        infoAyudaRegistroLabel.setBackground(new java.awt.Color(255, 255, 255));
        infoAyudaRegistroLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        infoAyudaRegistroLabel.setText(" Por favor introduce el nombre de usuario que deseas y algunos detalles requeridos en la siguiente forma. ");
        infoAyudaRegistroLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Personales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        darAltaUsuarioBtn.setText("Aceptar");
        darAltaUsuarioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darAltaUsuarioBtnActionPerformed(evt);
            }
        });

        cancelarAltaBtn.setText("Cancelar");
        cancelarAltaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarAltaBtnActionPerformed(evt);
            }
        });

        confirmarPassLabel.setText("Confirmar contraseña:");

        apellidosLabel.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        apellidosLabel.setText("Apellidos:");

        correoLabel.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        correoLabel.setText("Correo:");

        javax.swing.GroupLayout jdRegistroLayout = new javax.swing.GroupLayout(jdRegistro.getContentPane());
        jdRegistro.getContentPane().setLayout(jdRegistroLayout);
        jdRegistroLayout.setHorizontalGroup(
            jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoAyudaRegistroLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jdRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jdRegistroLayout.createSequentialGroup()
                            .addComponent(cancelarAltaBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(darAltaUsuarioBtn)
                            .addGap(12, 12, 12))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jdRegistroLayout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jdRegistroLayout.createSequentialGroup()
                                .addComponent(registroUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userRegistroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jdRegistroLayout.createSequentialGroup()
                                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(registroPassLabel)
                                    .addComponent(passwordRegistroTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(confirmarPassLabel)
                                    .addComponent(confirmPassRegistroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(115, 115, 115)))
                .addGap(107, 107, 107))
            .addGroup(jdRegistroLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(correoLabel)
                    .addComponent(apellidosLabel)
                    .addComponent(registroNombreLabel))
                .addGap(33, 33, 33)
                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(correoRegistroTextField)
                    .addComponent(jtApellidos)
                    .addComponent(jtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addContainerGap(198, Short.MAX_VALUE))
        );
        jdRegistroLayout.setVerticalGroup(
            jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jdRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoAyudaRegistroLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registroNombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellidosLabel)
                    .addComponent(jtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(correoLabel)
                    .addComponent(correoRegistroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registroUserLabel)
                    .addComponent(userRegistroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(registroPassLabel)
                    .addComponent(confirmarPassLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordRegistroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmPassRegistroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jdRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarAltaBtn)
                    .addComponent(darAltaUsuarioBtn))
                .addGap(27, 27, 27))
        );

        jdAgregarProductos.setSize(new java.awt.Dimension(0, 0));

        jtprecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtprecioActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Nombre:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Precio:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Descripcion:");

        jtdescripcion.setColumns(20);
        jtdescripcion.setRows(5);
        jScrollPane5.setViewportView(jtdescripcion);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("€");

        cancelarAltaProductoBtn.setText("Cancelar");
        cancelarAltaProductoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarAltaProductoBtnActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jdAgregarProductosLayout = new javax.swing.GroupLayout(jdAgregarProductos.getContentPane());
        jdAgregarProductos.getContentPane().setLayout(jdAgregarProductosLayout);
        jdAgregarProductosLayout.setHorizontalGroup(
            jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdAgregarProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel16)
                        .addComponent(jLabel15))
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jdAgregarProductosLayout.createSequentialGroup()
                        .addGroup(jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtnombre, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addGroup(jdAgregarProductosLayout.createSequentialGroup()
                                .addComponent(jtprecio, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25))
                    .addGroup(jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jdAgregarProductosLayout.createSequentialGroup()
                            .addComponent(btnAgregar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cancelarAltaProductoBtn))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32))
        );
        jdAgregarProductosLayout.setVerticalGroup(
            jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdAgregarProductosLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jdAgregarProductosLayout.createSequentialGroup()
                        .addGroup(jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtprecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17))
                    .addGroup(jdAgregarProductosLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jdAgregarProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarAltaProductoBtn)
                    .addComponent(btnAgregar))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jtabPrincipal.setBackground(new java.awt.Color(255, 255, 255));

        clientesScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        clientesScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        clientesPanel.setBackground(new java.awt.Color(255, 255, 255));

        tituloPestañaClientesLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tituloPestañaClientesLabel.setForeground(new java.awt.Color(51, 51, 255));
        tituloPestañaClientesLabel.setText("Gestión de los Clientes");

        tablaClientesScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        tablaClientesScrollPane.setBorder(null);
        tablaClientesScrollPane.setPreferredSize(new java.awt.Dimension(452, 402));

        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableUsers.setGridColor(new java.awt.Color(140, 140, 140));
        tablaClientesScrollPane.setViewportView(tableUsers);

        btnInsertarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editar.png"))); // NOI18N
        btnInsertarCliente.setText("Insertar Cliente");
        btnInsertarCliente.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnInsertarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarClienteActionPerformed(evt);
            }
        });

        btnEliminarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eliminar.png"))); // NOI18N
        btnEliminarCliente.setText("Eliminar Cliente");
        btnEliminarCliente.setToolTipText("Eliminar Clientes seleccionados");
        btnEliminarCliente.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarClienteActionPerformed(evt);
            }
        });

        btnSalirClientes.setText("Salir");
        btnSalirClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirClientesActionPerformed(evt);
            }
        });

        infoClientes2Label.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        infoClientes2Label.setText("** Al presionar el boton \"Eliminar Cliente\" se borraran todos los clientes seleccionados de la tabla.");

        infoClientes1Label.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        infoClientes1Label.setText("* Editar directamente los valores de la tabla");

        javax.swing.GroupLayout clientesPanelLayout = new javax.swing.GroupLayout(clientesPanel);
        clientesPanel.setLayout(clientesPanelLayout);
        clientesPanelLayout.setHorizontalGroup(
            clientesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(clientesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tituloPestañaClientesLabel)
                    .addGroup(clientesPanelLayout.createSequentialGroup()
                        .addComponent(btnInsertarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarCliente)
                        .addGap(212, 212, 212)
                        .addComponent(btnSalirClientes))
                    .addComponent(infoClientes1Label)
                    .addComponent(infoClientes2Label)
                    .addComponent(tablaClientesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        clientesPanelLayout.setVerticalGroup(
            clientesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloPestañaClientesLabel)
                .addGap(18, 18, 18)
                .addComponent(tablaClientesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoClientes1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoClientes2Label)
                .addGap(18, 18, 18)
                .addGroup(clientesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsertarCliente)
                    .addComponent(btnEliminarCliente)
                    .addComponent(btnSalirClientes))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        clientesScrollPane.setViewportView(clientesPanel);

        jtabPrincipal.addTab("Clientes", null, clientesScrollPane, "Gestión de los Clientes");

        productosScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        productosScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        productosPanel.setBackground(new java.awt.Color(255, 255, 255));

        tituloPestañaProductosLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tituloPestañaProductosLabel.setForeground(new java.awt.Color(204, 0, 0));
        tituloPestañaProductosLabel.setText("Gestión de los Productos");

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaProdScrollPane.setViewportView(tablaProductos);

        infoProd1Label.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        infoProd1Label.setText("* Editar directamente los valores de la tabla");

        infoProd2Label.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        infoProd2Label.setText("** Al presionar el boton \"Eliminar Producto\" se borraran todos los clientes seleccionados de la tabla.");

        btnInsertarProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editar.png"))); // NOI18N
        btnInsertarProd.setText("Insertar Producto");
        btnInsertarProd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnInsertarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarProdActionPerformed(evt);
            }
        });

        btnEliminarProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eliminar.png"))); // NOI18N
        btnEliminarProd.setText("Eliminar Producto");
        btnEliminarProd.setToolTipText("Eliminar Productos seleccionados");
        btnEliminarProd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnEliminarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProdActionPerformed(evt);
            }
        });

        btnSalirProd.setText("Salir");
        btnSalirProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirProdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout productosPanelLayout = new javax.swing.GroupLayout(productosPanel);
        productosPanel.setLayout(productosPanelLayout);
        productosPanelLayout.setHorizontalGroup(
            productosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tituloPestañaProductosLabel)
                    .addComponent(infoProd1Label)
                    .addComponent(infoProd2Label)
                    .addGroup(productosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, productosPanelLayout.createSequentialGroup()
                            .addComponent(btnInsertarProd)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnEliminarProd)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSalirProd))
                        .addComponent(tablaProdScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(149, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        productosPanelLayout.setVerticalGroup(
            productosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloPestañaProductosLabel)
                .addGap(18, 18, 18)
                .addComponent(tablaProdScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoProd1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoProd2Label)
                .addGap(18, 18, 18)
                .addGroup(productosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsertarProd)
                    .addComponent(btnEliminarProd)
                    .addComponent(btnSalirProd))
                .addContainerGap(148, Short.MAX_VALUE))
        );

        productosScrollPane.setViewportView(productosPanel);

        jtabPrincipal.addTab("Productos", null, productosScrollPane, "Gestión de los Productos");

        aboutScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        aboutScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        aboutPanel.setBackground(new java.awt.Color(255, 255, 255));

        imagenAboutLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tienda-virtual.gif"))); // NOI18N

        tituloPestañaAboutLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tituloPestañaAboutLabel.setForeground(new java.awt.Color(0, 153, 0));
        tituloPestañaAboutLabel.setText("Acerca de Nosotros");

        texto1ScrollPane.setBorder(null);

        textArea1.setEditable(false);
        textArea1.setColumns(20);
        textArea1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        textArea1.setRows(8);
        textArea1.setText("Bienvenidos a nuestra Tienda virtual. Espero que os \nhaya gustado.\n\nEsta mini tiena se trata del proyecto final de una \nasignatura de la universidad. Como vereis es muy \nsimple puesto que nos dieron una sola semana para \nplanificar y entregar el proyecto.");
        texto1ScrollPane.setViewportView(textArea1);

        mailsScrollPane.setBorder(null);

        mailsEditorPane.setEditable(false);
        mailsEditorPane.setBorder(null);
        mailsEditorPane.setContentType("text/html"); // NOI18N
        mailsEditorPane.setText("Desarrolladores:\n\n<p>Manuel Ruiz</p>\n<b>ruizmanuel@gmail.com</b>\n\n<p>Cristian Castillejo</p>\n<b>info@uniondeprogramadores.com</b>\n");
        mailsScrollPane.setViewportView(mailsEditorPane);

        javax.swing.GroupLayout aboutPanelLayout = new javax.swing.GroupLayout(aboutPanel);
        aboutPanel.setLayout(aboutPanelLayout);
        aboutPanelLayout.setHorizontalGroup(
            aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagenAboutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tituloPestañaAboutLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(texto1ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(mailsScrollPane))
                .addContainerGap(458, Short.MAX_VALUE))
        );
        aboutPanelLayout.setVerticalGroup(
            aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imagenAboutLabel)
                    .addGroup(aboutPanelLayout.createSequentialGroup()
                        .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloPestañaAboutLabel)
                            .addComponent(texto1ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(111, 111, 111)
                        .addComponent(mailsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(368, Short.MAX_VALUE))
        );

        aboutScrollPane.setViewportView(aboutPanel);

        jtabPrincipal.addTab("About", aboutScrollPane);

        javax.swing.GroupLayout jpnAdminLayout = new javax.swing.GroupLayout(jpnAdmin);
        jpnAdmin.setLayout(jpnAdminLayout);
        jpnAdminLayout.setHorizontalGroup(
            jpnAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtabPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jpnAdminLayout.setVerticalGroup(
            jpnAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnAdminLayout.createSequentialGroup()
                .addComponent(jtabPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jpnUser.setBackground(new java.awt.Color(255, 255, 255));

        tableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableClientesMouseReleased(evt);
            }
        });
        tableClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableClientesKeyReleased(evt);
            }
        });
        jScrollPane6.setViewportView(tableClientes);

        jlbClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clientes.png"))); // NOI18N
        jlbClientes.setText(" text");
        jlbClientes.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel21.setText("Total:");

        jlbNumProd.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jlbNumProd.setText("jLabel5");

        btnComprar.setText("Comprar");
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        jLabel5.setText("€");

        javax.swing.GroupLayout jpnUserLayout = new javax.swing.GroupLayout(jpnUser);
        jpnUser.setLayout(jpnUserLayout);
        jpnUserLayout.setHorizontalGroup(
            jpnUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbClientes)
                    .addGroup(jpnUserLayout.createSequentialGroup()
                        .addGroup(jpnUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnUserLayout.createSequentialGroup()
                                .addComponent(jlbNumProd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnComprar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jpnUserLayout.setVerticalGroup(
            jpnUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbClientes)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbNumProd)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel5))
                .addGap(29, 29, 29)
                .addComponent(btnComprar)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jpnLogin.setBackground(new java.awt.Color(255, 255, 255));
        jpnLogin.setEnabled(false);

        registrarseLabelBtn.setForeground(new java.awt.Color(0, 0, 153));
        registrarseLabelBtn.setText("Registrarse");
        registrarseLabelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registrarseLabelBtnMouseClicked(evt);
            }
        });

        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPasswordKeyReleased(evt);
            }
        });

        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUserKeyReleased(evt);
            }
        });

        passwordLabel.setText("Password:");

        userLabel.setText("User:");

        jbnAceptar.setText("Aceptar");
        jbnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnLoginLayout = new javax.swing.GroupLayout(jpnLogin);
        jpnLogin.setLayout(jpnLoginLayout);
        jpnLoginLayout.setHorizontalGroup(
            jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnLoginLayout.createSequentialGroup()
                .addGroup(jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpnLoginLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userLabel)
                            .addComponent(passwordLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPassword)
                            .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)))
                    .addGroup(jpnLoginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(registrarseLabelBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                        .addComponent(jbnAceptar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnLoginLayout.setVerticalGroup(
            jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLabel)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registrarseLabelBtn)
                    .addComponent(jbnAceptar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpnAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jpnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(362, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpnAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jpnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(338, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbnAceptarActionPerformed
        loguearse();
    }//GEN-LAST:event_jbnAceptarActionPerformed

    private void loguearse() {
        String user = txtUser.getText();
        char[] pass = txtPassword.getPassword();
        String passw = new String(pass);

        int buscado = Utils.buscarCliente(arrayClientes, user);
        if (buscado != -1) {
            Clientes actual = arrayClientes[buscado];
            if (actual.getPassword().equals(passw)) {
                userActual = buscado;
                this.setSize(553, 472);
                centrarFinestra(this);
                jpnLogin.setVisible(false);
                if (actual.isAdmin()) {
                    isAdmin = true;
                    this.setTitle("Admin: " + actual.getNombre());
                    jpnAdmin.setVisible(true);
                    mostrarUsuarios();
                    mostrarProductos();
                } else {
                    this.setTitle("Cliente: " + actual.getNombre());
                    jpnUser.setVisible(true);
                    mostrarClientes();
                }
            }
        } else {
            String texto = "Usuario o contraseña incorrectos.\nSi aún no eres cliente pulsa 'Registrarse'";
            optionPane(texto, "Error de login");
        }
    }

    private void registrarseLabelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registrarseLabelBtnMouseClicked
        clienteNuevo();
    }//GEN-LAST:event_registrarseLabelBtnMouseClicked

    // Este metodo es para el evento cuando se presiona "Aceptar" en el 
    // formulario de alta de nuevos usuarios
    private void darAltaUsuarioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_darAltaUsuarioBtnActionPerformed

        char[] passwordArray = passwordRegistroTextField.getPassword();
        char[] confirmArray = confirmPassRegistroTextField.getPassword();
        String nombre = jtNombre.getText();
        String apellidos = jtApellidos.getText();
        String user = userRegistroTextField.getText();
        String correo = correoRegistroTextField.getText();
        int encontrado = -1;

        String passwordStr = new String(passwordArray);
        String confirmStr = new String(confirmArray);

        if (!user.isEmpty()) {
            encontrado = Utils.buscarCliente(arrayClientes, user);
        }

        // bloque de validaciones
        int formulario_ok = 0;

        if (validarCampos(nombre, apellidos, correo, user, encontrado, passwordStr, confirmStr)) {
            formulario_ok = 1;
        }

        if (formulario_ok == 1) {
            arrayClientes = Utils.insertarCliente(arrayClientes, nombre, apellidos, passwordStr, user, correo);
            if (isAdmin) {
                mostrarUsuarios();
            } else {
                String texto = " Estimado sr/a " + nombre + " ,Le damos la bienvenida a nuestra tienda";
                JOptionPane.showMessageDialog(new JFrame(), texto, "Los datos han sido registrados correctamente ", JOptionPane.INFORMATION_MESSAGE);
            }
            jdRegistro.setVisible(false);
        }
    }//GEN-LAST:event_darAltaUsuarioBtnActionPerformed

    /**
     * @return Devuelve true si todos los campos son correctos
     */
    private boolean validarCampos(String nombre, String apellidos, String correo, String user, int encontrado, String password, String confirm) {
        boolean res = false;

        // Podria devolver directamente las condiciones concatenadas
        // pero necesito mostrar un msj por cada una, asi que no
        if (nombre.isEmpty()) {
            optionPane("No has introducido tu nombre", "Error en registro");
        } else if (apellidos.isEmpty()) {
            optionPane("No has introducido tus apellidos", "Error en registro");
        } else if (correo.isEmpty()) {
            optionPane("No has introducido el correo", "Error en registro");
        } else if (!correoValido(correo)) {
            optionPane("Error en el formato del correo ( usuario@dominio.com )", "Error en registro");
        } else if (user.isEmpty()) {
            optionPane("No has introducido el nombre de usuario", "Error en registro");
        } else if (encontrado != -1) {
            optionPane("El nombre de usuario ya existe", "Error en registro");
        } else if (password.isEmpty()) {
            optionPane("No has introducido el password", "Error en registro");
        } else if (password.length() < 5) {
            optionPane("El password ha de contener más de 4 carácteres", "Error en registro");
        } else if (confirm.isEmpty() || !password.equals(confirm)) {
            optionPane("La contraseña debe coincidir en los 2 campos", "Error en registro");
        } else {
            res = true;
        }

        return res;
    }

    /**
     *
     * @param correo - Correo a validar
     * @return Verdadero si el correo es valido
     */
    private boolean correoValido(String correo) {
        boolean contieneArroba = correo.contains("@");
        boolean tienePuntoLuegoArroba;

        if (contieneArroba) {
            tienePuntoLuegoArroba = correo.substring(correo.indexOf('@'), correo.length()).contains(".");
            // Si los 2 son verdaderos entonces el correo es valido
            return contieneArroba && tienePuntoLuegoArroba;
        } else {
            return false;
        }

    }

    private void cancelarAltaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarAltaBtnActionPerformed
        // TODO add your handling code here:
        jdRegistro.setVisible(false);
    }//GEN-LAST:event_cancelarAltaBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (isAdmin) {
            Clientes aux = new Clientes();
            arrayClientes = Utils.guardarTablaClientes(arrayClientes, tableUsers);
            aux.guardarClientes(arrayClientes);

            Productos aux2 = new Productos();
            arrayProductos = Utils.guardarTablaProductos(arrayProductos, tablaProductos);
            aux2.guardarProductos(arrayProductos);

        } else {
            Clientes aux = new Clientes();
            aux.guardarClientes(arrayClientes);
        }
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void btnInsertarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarClienteActionPerformed
        passwordRegistroTextField.setText("");
        confirmPassRegistroTextField.setText("");
        jtNombre.setText("");
        jtApellidos.setText("");
        userRegistroTextField.setText("");
        clienteNuevo();
    }//GEN-LAST:event_btnInsertarClienteActionPerformed

    private void btnEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClienteActionPerformed
        int filas[] = tableUsers.getSelectedRows();
        if (filas.length > 0) {
            for (int x = filas.length - 1; x >= 0; x--) {
                Utils.eliminarCliente(arrayClientes, filas[x]);
            }
            mostrarUsuarios();
        } else {
            String texto = "No has seleccionado ningún usuario";
            String cabecera = "Error de borrado";
            optionPane(texto, cabecera);
        }
    }//GEN-LAST:event_btnEliminarClienteActionPerformed

    private void btnSalirClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirClientesActionPerformed
        if (isAdmin) {
            Clientes aux = new Clientes();
            arrayClientes = Utils.guardarTablaClientes(arrayClientes, tableUsers);
            aux.guardarClientes(arrayClientes);

            Productos aux2 = new Productos();
            arrayProductos = Utils.guardarTablaProductos(arrayProductos, tablaProductos);
            aux2.guardarProductos(arrayProductos);
        }
        System.exit(0);
    }//GEN-LAST:event_btnSalirClientesActionPerformed

    private void jtprecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtprecioActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jtprecioActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String producto = jtnombre.getText();
        String precio = jtprecio.getText();
        String descripcion = jtdescripcion.getText();
        int price = 0;
        if (!precio.isEmpty()) {
            price = Utils.leerEntero(precio);
        }

        // bloque de validaciones
        int formulario_ok = 0;

        if (producto.isEmpty()) {
            String texto = "No has introducido el nombre del producto";
            String cabecera = "Error en registro ";
            optionPane(texto, cabecera);
        } else if (precio.isEmpty()) {
            String texto = "No has introducido el precio";
            String cabecera = "Error en registro ";
            optionPane(texto, cabecera);
        } else if (price < 0) {
            String texto = "Cuidado has introducido un precio negativo o no has introducido un entero";
            String cabecera = "Error en registro ";
            optionPane(texto, cabecera);
        } else if (descripcion.isEmpty()) {
            String texto = "No has introducido la descripcion del producto";
            String cabecera = "Error en registro ";
            optionPane(texto, cabecera);
        } else {
            formulario_ok = 1;
        }

        if (formulario_ok == 1) {// producto = nombre del producto
            arrayProductos = Utils.insertarProductos(arrayProductos, producto, descripcion, price); // price es el precio pero en un int
            if (isAdmin) {
                mostrarProductos();
            } else {
                String texto = " producto agregado correctamente";
                JOptionPane.showMessageDialog(new JFrame(), texto, "Los datos han sido registrados correctamente ", JOptionPane.INFORMATION_MESSAGE);
            }
            jdAgregarProductos.setVisible(false);
        }
}//GEN-LAST:event_btnAgregarActionPerformed

    private void cancelarAltaProductoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarAltaProductoBtnActionPerformed
        jdAgregarProductos.setVisible(false);
    }//GEN-LAST:event_cancelarAltaProductoBtnActionPerformed

    private void btnInsertarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarProdActionPerformed
        jtnombre.setText("");
        jtprecio.setText("");
        jtdescripcion.setText("");
        jdAgregarProductos.setVisible(true);
        jdAgregarProductos.setSize(500, 500);
        centrarRegistre(jdAgregarProductos);
        jdAgregarProductos.setTitle("Añadir Productos");
    }//GEN-LAST:event_btnInsertarProdActionPerformed

    private void btnEliminarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProdActionPerformed
        int filas[] = tablaProductos.getSelectedRows();
        if (filas.length > 0) {
            for (int x = filas.length - 1; x >= 0; x--) {
                Utils.eliminarProducto(arrayProductos, filas[x]);
            }
            mostrarProductos();
        } else {
            String texto = "No has seleccionado ningún producto";
            String cabecera = "Error de borrado";
            optionPane(texto, cabecera);
        }
    }//GEN-LAST:event_btnEliminarProdActionPerformed

    private void btnSalirProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirProdActionPerformed
        if (isAdmin) {
            Clientes aux = new Clientes();
            arrayClientes = Utils.guardarTablaClientes(arrayClientes, tableUsers);
            aux.guardarClientes(arrayClientes);

            Productos aux2 = new Productos();
            arrayProductos = Utils.guardarTablaProductos(arrayProductos, tablaProductos);
            aux2.guardarProductos(arrayProductos);
        }
        System.exit(0);
    }//GEN-LAST:event_btnSalirProdActionPerformed

    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
        boolean enviar = false;
        if ((arrayProductos[0] != null) && (prodComprados != null)) {
            String mensajeEnviar = "<br>Grácias por comprar en nuestra tienda. En menos de 48 horas lo recibirá.<br>";
            mensajeEnviar += "<br/><table width='90%' border='0' cellpadding='0' cellspacing='0' align='left'><tr><td colspan='2' align='left' style='font-size: 15px;'><b>Datos del cliente:</b></br></td></tr><tr><td colspan='2'>&nbsp;</td></tr><tr><td width='10%'><b>Nombre:</b></td><td>" + arrayClientes[userActual].getNombre() + "</td></tr>";
            mensajeEnviar += "<tr><td width='10%'><b>Apellidos:</b></td><td>" + arrayClientes[userActual].getApellidos() + "</td></tr><tr><td width='10%'><b>UserName:</b></td><td>" + arrayClientes[userActual].getUserName() + "</td></tr></table>";
            mensajeEnviar += "<br><br><br><table width='90%' border='1px' cellpadding='0' cellspacing='0' align='left'><tr><td colspan='2' align='left' style='font-size: 15px;'><b>Datos de la compra:</b></br></td></tr><tr><td colspan='2'>&nbsp;</td></tr><tr>";
            mensajeEnviar += "<td width='10%'><b>Nombre:</b></td><td width='10%'><b>Descripción:</b></td><td width='10%'><b>Precio:</b></td><td width='10%'><b>Cantidad:</b></td><td width='10%'><b>Total:</b></td></tr>";
            for (int x = 0; x < prodComprados.length; x++) {
                if (prodComprados[x] > 0) {
                    enviar = true;
                    mensajeEnviar += "<tr><td align='center'>" + arrayProductos[x].getNombre() + "</td><td align='center'>" + arrayProductos[x].getDescripcion() + "</td><td align='center'>" + arrayProductos[x].getPrecio() + "</td>";
                    mensajeEnviar += "<td align='center'>" + prodComprados[x] + "</td><td align='center'>" + arrayTotal[x] + "</td></tr>";
                }
            }
            mensajeEnviar += "<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td align='center'>" + compraTotal + " &euro;</td></tr>";
            mensajeEnviar += "</table>";
            String subject = "Procesando pedido";
            if (enviar) {
                String[] contenido = new String[]{arrayClientes[userActual].getNombre() + " hemos registrado su pedido.", "En menos de 24 horas recibira un correo con los detalles."};
                JOptionPane.showMessageDialog(new JFrame(), contenido, "Procesando pedido...", JOptionPane.INFORMATION_MESSAGE);
                try {
                    Utils.enviamail(mensajeEnviar, subject, arrayClientes[userActual]);
                } catch (NoSuchProviderException ex) {
                } catch (MessagingException ex) {
                }
                Clientes aux = new Clientes();
                aux.guardarClientes(arrayClientes);
                System.exit(0);
            } else {
                String[] contenido2 = new String[]{"Señor " + arrayClientes[userActual].getNombre() + ",", "No ha seleccionado ningñn producto para comprar.", "¡Gracias!"};
                JOptionPane.showMessageDialog(new JFrame(), contenido2, "¡Escoja sus productos!", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            if (arrayProductos[0] == null) {
                String[] contenido = new String[]{"Lo sentimos señor " + arrayClientes[userActual].getNombre(), "no tenemos ningún producto para venderle.", " ", "Contacte con el Administrador para mas información", "¡Gracias!", " ", "Saliendo del Programa..."};
                JOptionPane.showMessageDialog(new JFrame(), contenido, "¡Sin productos!", JOptionPane.WARNING_MESSAGE);
                Clientes aux = new Clientes();
                aux.guardarClientes(arrayClientes);
                System.exit(0);
            } else {
                String[] contenido = new String[]{"Señor " + arrayClientes[userActual].getNombre() + ",", "No ha seleccionado ningñn producto para comprar.", "¡Gracias!"};
                JOptionPane.showMessageDialog(new JFrame(), contenido, "¡Escoja sus productos!", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnComprarActionPerformed

    private void tableClientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableClientesKeyReleased
        int precio = 0, total = 0, cantidad = 0;
        prodComprados = new int[tableClientes.getRowCount()];
        arrayTotal = new int[tableClientes.getRowCount()];
        String texto = "La cantidad debe ser un entero positivo.";
        String cabecera = "Error en la cantidad";
        for (int x = 0; x < tableClientes.getRowCount(); x++) {
            precio = Utils.leerEntero(tableClientes.getValueAt(x, 1).toString());
            cantidad = Utils.leerEntero(tableClientes.getValueAt(x, 3).toString());
            if (cantidad < 0) {
                optionPane(texto, cabecera);
                break;
            } else {
                prodComprados[x] = cantidad;
                total += precio * cantidad;
                arrayTotal[x] = precio * cantidad;
            }
        }
        compraTotal = total;
        txtTotal.setText("" + total);
    }//GEN-LAST:event_tableClientesKeyReleased

    private void tableClientesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableClientesMouseReleased
        int precio = 0, total = 0, cantidad = 0;
        prodComprados = new int[tableClientes.getRowCount()];
        arrayTotal = new int[tableClientes.getRowCount()];
        String texto = "La cantidad debe ser un entero positivo.";
        String cabecera = "Error en la cantidad";
        for (int x = 0; x < tableClientes.getRowCount(); x++) {
            precio = Utils.leerEntero(tableClientes.getValueAt(x, 1).toString());
            cantidad = Utils.leerEntero(tableClientes.getValueAt(x, 3).toString());
            if (cantidad < 0) {
                optionPane(texto, cabecera);
                break;
            } else {
                prodComprados[x] = cantidad;
                total += precio * cantidad;
                arrayTotal[x] = precio * cantidad;
            }
        }
        compraTotal = total;
        txtTotal.setText("" + total);
    }//GEN-LAST:event_tableClientesMouseReleased

    private void txtPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            loguearse();
    }//GEN-LAST:event_txtPasswordKeyReleased

    private void txtUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            loguearse();
    }//GEN-LAST:event_txtUserKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Main().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aboutPanel;
    private javax.swing.JScrollPane aboutScrollPane;
    private javax.swing.JLabel apellidosLabel;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton btnEliminarCliente;
    private javax.swing.JButton btnEliminarProd;
    private javax.swing.JButton btnInsertarCliente;
    private javax.swing.JButton btnInsertarProd;
    private javax.swing.JButton btnSalirClientes;
    private javax.swing.JButton btnSalirProd;
    private javax.swing.JButton cancelarAltaBtn;
    private javax.swing.JButton cancelarAltaProductoBtn;
    private javax.swing.JPanel clientesPanel;
    private javax.swing.JScrollPane clientesScrollPane;
    private javax.swing.JPasswordField confirmPassRegistroTextField;
    private javax.swing.JLabel confirmarPassLabel;
    private javax.swing.JLabel correoLabel;
    private javax.swing.JTextField correoRegistroTextField;
    private javax.swing.JButton darAltaUsuarioBtn;
    private javax.swing.JLabel imagenAboutLabel;
    private javax.swing.JLabel infoAyudaRegistroLabel;
    private javax.swing.JLabel infoClientes1Label;
    private javax.swing.JLabel infoClientes2Label;
    private javax.swing.JLabel infoProd1Label;
    private javax.swing.JLabel infoProd2Label;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbnAceptar;
    private javax.swing.JDialog jdAgregarProductos;
    private javax.swing.JDialog jdRegistro;
    private javax.swing.JLabel jlbClientes;
    private javax.swing.JLabel jlbNumProd;
    private javax.swing.JPanel jpnAdmin;
    private javax.swing.JPanel jpnLogin;
    private javax.swing.JPanel jpnUser;
    private javax.swing.JTextField jtApellidos;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTabbedPane jtabPrincipal;
    private javax.swing.JTextArea jtdescripcion;
    private javax.swing.JTextField jtnombre;
    private javax.swing.JTextField jtprecio;
    private javax.swing.JEditorPane mailsEditorPane;
    private javax.swing.JScrollPane mailsScrollPane;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordRegistroTextField;
    private javax.swing.JPanel productosPanel;
    private javax.swing.JScrollPane productosScrollPane;
    private javax.swing.JLabel registrarseLabelBtn;
    private javax.swing.JLabel registroNombreLabel;
    private javax.swing.JLabel registroPassLabel;
    private javax.swing.JLabel registroUserLabel;
    private javax.swing.JScrollPane tablaClientesScrollPane;
    private javax.swing.JScrollPane tablaProdScrollPane;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTable tableClientes;
    private javax.swing.JTable tableUsers;
    private javax.swing.JTextArea textArea1;
    private javax.swing.JScrollPane texto1ScrollPane;
    private javax.swing.JLabel tituloPestañaAboutLabel;
    private javax.swing.JLabel tituloPestañaClientesLabel;
    private javax.swing.JLabel tituloPestañaProductosLabel;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtUser;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField userRegistroTextField;
    // End of variables declaration//GEN-END:variables

    private void mostrarUsuarios() {
        int cont = 0;
        DefaultTableModel modelInicial = new DefaultTableModel(new String[]{"Nombre", "Apellidos", "Correo", "UserName", "Password", "Admin"}, 0);
        tableUsers.setModel(modelInicial);
        DefaultTableModel model = (DefaultTableModel) tableUsers.getModel();

        while (arrayClientes[cont] != null) {
            model.addRow(new Object[]{arrayClientes[cont].getNombre(), arrayClientes[cont].getApellidos(), arrayClientes[cont].getCorreo(), arrayClientes[cont].getUserName(), arrayClientes[cont].getPassword(), "" + arrayClientes[cont].getAdmin()});
            cont++;
        }
    }

    private void mostrarProductos() {
        int cont = 0;
        DefaultTableModel modelInicial = new DefaultTableModel(new String[]{"Nombre", "Precio € ", "Descripcion"}, 0);
        tablaProductos.setModel(modelInicial);
        DefaultTableModel model = (DefaultTableModel) tablaProductos.getModel();

        while (arrayProductos[cont] != null) {
            model.addRow(new Object[]{arrayProductos[cont].getNombre(), arrayProductos[cont].getPrecio(), arrayProductos[cont].getDescripcion()});
            cont++;
        }
    }

    private void mostrarClientes() {
        int cont = 0;

        tableClientes.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{"Nombre", "Precio € ", "Descripcion", "Cantidad"}
        ) {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return editabeClientes[columnIndex];
            }
        });
        DefaultTableModel model = (DefaultTableModel) tableClientes.getModel();

        while (arrayProductos[cont] != null) {
            model.addRow(new Object[]{arrayProductos[cont].getNombre(), arrayProductos[cont].getPrecio(), arrayProductos[cont].getDescripcion(), "0"});
            cont++;
        }
        jlbClientes.setText("Bienvenido " + arrayClientes[userActual].getUserName() + " a nuestra tienda.");
        jlbNumProd.setText("En este momento tenemos " + cont + " producto/s a vuestra disposición.");
    }

    /**
     *
     * @param texto - Texto que ira en el cuerpo del dialogo de mensaje
     * @param cabecera - Texto de cabecera del dialogo de mensaje
     */
    private void optionPane(String texto, String cabecera) {
        JOptionPane.showMessageDialog(new JFrame(), texto, cabecera, JOptionPane.WARNING_MESSAGE);
    }
}
